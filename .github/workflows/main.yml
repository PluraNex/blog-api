name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DJANGO_SETTINGS_MODULE: project.settings.development
      DEV_DB_NAME: test_db
      DEV_DB_USER: test_user
      DEV_DB_PASSWORD: test_password
      DEV_DB_HOST: 127.0.0.1
      DEV_DB_PORT: 5432
      DEV_DEBUG: 'True'
      DEV_ALLOWED_HOSTS: localhost

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd "pg_isready -U test_user" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h $DEV_DB_HOST -p $DEV_DB_PORT; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Run migrations
        run: |
          python manage_env.py migrate --env=development

      - name: Run tests
        run: |
          python manage_env.py test --env=development

  deploy_dev:
    runs-on: ubuntu-latest
    needs: test  # Este job depende do job "test" ter sucesso
    if: github.ref == 'refs/heads/main'  # Apenas para a branch main
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Deploy to Development Server
        run: |
          echo "Deploying to development..."
          # Adicione aqui o seu script de deploy para o ambiente de desenvolvimento

  deploy_prod:
    runs-on: ubuntu-latest
    needs: test  # Este job depende do job "test" ter sucesso
    if: github.ref == 'refs/heads/production'  # Apenas para a branch production (ou outra que preferir)
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Deploy to Production Server
        run: |
          echo "Deploying to production..."
          # Adicione aqui o seu script de deploy para o ambiente de produção

    # Configuração de ambiente para aprovar manualmente o deploy
    environment:
      name: Production
      url: https://your-production-url.com
    permissions:
      contents: read
