name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  # Variáveis globais para o pipeline
  DJANGO_SETTINGS_MODULE: project.settings.development
  DEV_DB_NAME: test_db
  DEV_DB_USER: test_user
  DEV_DB_PASSWORD: test_password
  DEV_DB_HOST: 127.0.0.1
  DEV_DB_PORT: 5432
  DEV_DEBUG: 'True'
  DEV_ALLOWED_HOSTS: localhost
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
  SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd "pg_isready -U test_user" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necessário para SonarCloud analisar corretamente o histórico de commits

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h $DEV_DB_HOST -p $DEV_DB_PORT; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Run migrations
        run: |
          python manage_env.py migrate --env=development

      - name: Run tests and generate coverage report
        run: |
          coverage run --source='.' manage.py test
          coverage xml

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Clones rasos devem ser desativados para uma melhor relevância na análise

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Necessário para obter informações sobre PRs, se houver
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.qualitygate.wait=true
            -Dsonar.coverage.exclusions=**/tests/**
